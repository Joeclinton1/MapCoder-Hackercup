trick: |
  ## Problem:
  {problem_prompt}
  {sample_io_prompt}
  
  Competitive programming problem can often be solved by identifying a mathematical trick or way to simplify the problem, or specific datastructure / algorithm that when used makes the problem solvable efficiently.
  You are an expert competitive programmer. Think step by step and describe a trick like this that can be used to solve the above competitive coding problem. Think carefully about the constraints and time complexity needed.
  Check if 1) a mathematical constant time or 2) an approximate solution is allowed. if yes then solve it this way.
  Your response must contain only the trick and be concise.

observation: |
  ## Problem:
  {problem_prompt}
  {sample_io_prompt}
  --------------
  Generate an insightful and concise observation about the problem in one line. Your observation should not explain how to solve the problem or contain code. It must be one line.

coding: |
  ## Problem:
  {problem_prompt}
  {sample_io_prompt}
  
  ## Trick for solving
  {trick}
  ----------------
  
  You are an expert competitive programmer.
  Lets think step by step to generate correct {language} code to solve the above competitive coding problem.
  Consider the problem mathematically, taking into account the time complexity and edge cases.
  Check if the problem allows for approximations.
  Important:
  {lang_specific_tips}
  ## Your response must contain only the {language} code to solve this problem. Do not add extra explanation or words.
  

coding_improvement_A: |
  ## Problem:
  {problem_prompt}
  {sample_io_prompt}
  
  ## Code:
  {code}
  
  ## Critical Analysis
  You are an expert competitive programmer. Analyze carefully and critically the above code, to determine whether it solves the competitive coding problem.
  Does it solve all the edge cases? Can you invent an edge case it would fail on.
  
  # Improve code
  Modify the code to improve it so that it fully solves the problem
  ----------------
  Important:
  {lang_specific_tips}
  
  ## Your response must contain the Critical Analysis and then the {language} code inside <code> block to solve this problem.

coding_improvement_B: |
  ## Problem:
  {problem_prompt}
  {sample_io_prompt}
  
  ## Code:
  {code}
  
  ## Critical Analysis:
  You are an expert competitive programmer.
  1. Identify which test cases it failed to solve and explain how it should have solved them
  2. Critically analyze the code and concisely suggest improvements
  
  # Improve code
  Modify the code so that it does not fail the test cases. You may need to completely rewrite it.
  ----------------
  Important:
  {lang_specific_tips}
  
  ## Your response must contain the Critical Analysis and then the {language} code inside <code> block to solve this problem.

trick_comparison: |
  Compare the following two tricks for how to solve the competitive coding question, and output which trick is more likely to solve the problem.
  
  # Problem
  {problem_prompt}
  
  # Trick A
  {trick_a}
  
  # Trick B
  {trick_b}
  --------------
  
  Compare the two tricks, by stating reasoning for and against for each of them for why solve the problem more correctly.
  At the end state your verdict on which trick is better by outputting either A if trick A is better or B if trick B is better.
  you MUST format your answer with the following XML. Include all explanation inside the analysis tag:
  
  <root>
  <analysis>
  ## Reasons for and against for each trick being the more likely one to solve the problem correctly.
  </analysis>
  <verdict>
  ## A single Letter A or B, denoting the trick that is more likely to be correct.
  </verdict>
  </root>